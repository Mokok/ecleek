/*
* generated by Xtext
*/
grammar InternalLeek;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.processus.ecleek.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.processus.ecleek.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.processus.ecleek.services.LeekGrammarAccess;

}

@parser::members {
 
 	private LeekGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LeekGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleScript
entryRuleScript 
:
{ before(grammarAccess.getScriptRule()); }
	 ruleScript
{ after(grammarAccess.getScriptRule()); } 
	 EOF 
;

// Rule Script
ruleScript
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScriptAccess().getStatementsAssignment()); }
(rule__Script__StatementsAssignment)*
{ after(grammarAccess.getScriptAccess().getStatementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementBlock
entryRuleStatementBlock 
:
{ before(grammarAccess.getStatementBlockRule()); }
	 ruleStatementBlock
{ after(grammarAccess.getStatementBlockRule()); } 
	 EOF 
;

// Rule StatementBlock
ruleStatementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementBlockAccess().getGroup()); }
(rule__StatementBlock__Group__0)
{ after(grammarAccess.getStatementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAffectation
entryRuleAffectation 
:
{ before(grammarAccess.getAffectationRule()); }
	 ruleAffectation
{ after(grammarAccess.getAffectationRule()); } 
	 EOF 
;

// Rule Affectation
ruleAffectation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAffectationAccess().getGroup()); }
(rule__Affectation__Group__0)
{ after(grammarAccess.getAffectationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIf
entryRuleIf 
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfAccess().getGroup()); }
(rule__If__Group__0)
{ after(grammarAccess.getIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile
entryRuleWhile 
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileAccess().getGroup()); }
(rule__While__Group__0)
{ after(grammarAccess.getWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor
entryRuleFor 
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAccess().getGroup()); }
(rule__For__Group__0)
{ after(grammarAccess.getForAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForIterator
entryRuleForIterator 
:
{ before(grammarAccess.getForIteratorRule()); }
	 ruleForIterator
{ after(grammarAccess.getForIteratorRule()); } 
	 EOF 
;

// Rule ForIterator
ruleForIterator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForIteratorAccess().getAlternatives()); }
(rule__ForIterator__Alternatives)
{ after(grammarAccess.getForIteratorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEachIterator
entryRuleEachIterator 
:
{ before(grammarAccess.getEachIteratorRule()); }
	 ruleEachIterator
{ after(grammarAccess.getEachIteratorRule()); } 
	 EOF 
;

// Rule EachIterator
ruleEachIterator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEachIteratorAccess().getGroup()); }
(rule__EachIterator__Group__0)
{ after(grammarAccess.getEachIteratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableIterator
entryRuleVariableIterator 
:
{ before(grammarAccess.getVariableIteratorRule()); }
	 ruleVariableIterator
{ after(grammarAccess.getVariableIteratorRule()); } 
	 EOF 
;

// Rule VariableIterator
ruleVariableIterator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableIteratorAccess().getGroup()); }
(rule__VariableIterator__Group__0)
{ after(grammarAccess.getVariableIteratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration 
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
(rule__FunctionDeclaration__Group__0)
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
(rule__ParameterDeclaration__Group__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalDeclaration
entryRuleLocalDeclaration 
:
{ before(grammarAccess.getLocalDeclarationRule()); }
	 ruleLocalDeclaration
{ after(grammarAccess.getLocalDeclarationRule()); } 
	 EOF 
;

// Rule LocalDeclaration
ruleLocalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalDeclarationAccess().getGroup()); }
(rule__LocalDeclaration__Group__0)
{ after(grammarAccess.getLocalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalDeclaration
entryRuleGlobalDeclaration 
:
{ before(grammarAccess.getGlobalDeclarationRule()); }
	 ruleGlobalDeclaration
{ after(grammarAccess.getGlobalDeclarationRule()); } 
	 EOF 
;

// Rule GlobalDeclaration
ruleGlobalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getGroup()); }
(rule__GlobalDeclaration__Group__0)
{ after(grammarAccess.getGlobalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getComparisonParserRuleCall()); }
	ruleComparison
{ after(grammarAccess.getExpressionAccess().getComparisonParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayLiteral
entryRuleArrayLiteral 
:
{ before(grammarAccess.getArrayLiteralRule()); }
	 ruleArrayLiteral
{ after(grammarAccess.getArrayLiteralRule()); } 
	 EOF 
;

// Rule ArrayLiteral
ruleArrayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup()); }
(rule__ArrayLiteral__Group__0)
{ after(grammarAccess.getArrayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
(rule__VariableReference__Group__0)
{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclude
entryRuleInclude 
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeAccess().getGroup()); }
(rule__Include__Group__0)
{ after(grammarAccess.getIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIncludeParserRuleCall_0()); }
	ruleInclude
{ after(grammarAccess.getStatementAccess().getIncludeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGlobalDeclarationParserRuleCall_1()); }
	ruleGlobalDeclaration
{ after(grammarAccess.getStatementAccess().getGlobalDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLocalDeclarationParserRuleCall_2()); }
	ruleLocalDeclaration
{ after(grammarAccess.getStatementAccess().getLocalDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getFunctionDeclarationParserRuleCall_3()); }
	ruleFunctionDeclaration
{ after(grammarAccess.getStatementAccess().getFunctionDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_4()); }
(rule__Statement__Group_4__0)
{ after(grammarAccess.getStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForParserRuleCall_5()); }
	ruleFor
{ after(grammarAccess.getStatementAccess().getForParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileParserRuleCall_6()); }
	ruleWhile
{ after(grammarAccess.getStatementAccess().getWhileParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfParserRuleCall_7()); }
	ruleIf
{ after(grammarAccess.getStatementAccess().getIfParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_8()); }
(rule__Statement__Group_8__0)
{ after(grammarAccess.getStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatementBlockParserRuleCall_9()); }
	ruleStatementBlock
{ after(grammarAccess.getStatementAccess().getStatementBlockParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForIterator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForIteratorAccess().getEachIteratorParserRuleCall_0()); }
	ruleEachIterator
{ after(grammarAccess.getForIteratorAccess().getEachIteratorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getForIteratorAccess().getVariableIteratorParserRuleCall_1()); }
	ruleVariableIterator
{ after(grammarAccess.getForIteratorAccess().getVariableIteratorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_0()); }
(rule__Comparison__Group_1_0_0__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_1()); }
(rule__Comparison__Group_1_0_1__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_2()); }
(rule__Comparison__Group_1_0_2__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_3()); }
(rule__Comparison__Group_1_0_3__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_4()); }
(rule__Comparison__Group_1_0_4__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_5()); }
(rule__Comparison__Group_1_0_5__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_5()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_6()); }
(rule__Comparison__Group_1_0_6__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_6()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0_7()); }
(rule__Comparison__Group_1_0_7__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrKeyword_1_0_1_0()); }

	'or' 

{ after(grammarAccess.getOrAccess().getOrKeyword_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_0_1_1()); }

	'||' 

{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndKeyword_1_0_1_0()); }

	'and' 

{ after(grammarAccess.getAndAccess().getAndKeyword_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_0_1_1()); }

	'&&' 

{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
(rule__Multiplication__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
(rule__Multiplication__Group_1_0_1__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_3()); }
	ruleFunctionCall
{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_4()); }
	ruleVariableReference
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
(rule__PrimaryExpression__Group_5__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_6()); }
	ruleArrayLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getFunctionCallParserRuleCall_4_0()); }
	ruleFunctionCall
{ after(grammarAccess.getStatementAccess().getFunctionCallParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__0__Impl
	rule__Statement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAffectationParserRuleCall_8_0()); }
	ruleAffectation
{ after(grammarAccess.getStatementAccess().getAffectationParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_8_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__0__Impl
	rule__StatementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__1__Impl
	rule__StatementBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementBlockAction_1()); }
(

)
{ after(grammarAccess.getStatementBlockAccess().getStatementBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__2__Impl
	rule__StatementBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2()); }
(rule__StatementBlock__StatementsAssignment_2)*
{ after(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Affectation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Affectation__Group__0__Impl
	rule__Affectation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffectationAccess().getVariableAssignment_0()); }
(rule__Affectation__VariableAssignment_0)
{ after(grammarAccess.getAffectationAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Affectation__Group__1__Impl
	rule__Affectation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffectationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAffectationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Affectation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffectationAccess().getValueAssignment_2()); }
(rule__Affectation__ValueAssignment_2)
{ after(grammarAccess.getAffectationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__If__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getConditionAssignment_2()); }
(rule__If__ConditionAssignment_2)
{ after(grammarAccess.getIfAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getThenAssignment_4()); }
(rule__If__ThenAssignment_4)
{ after(grammarAccess.getIfAccess().getThenAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGroup_5()); }
(rule__If__Group_5__0)?
{ after(grammarAccess.getIfAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__If__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_5__0__Impl
	rule__If__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseAssignment_5_1()); }
(rule__If__ElseAssignment_5_1)
{ after(grammarAccess.getIfAccess().getElseAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getConditionAssignment_2()); }
(rule__While__ConditionAssignment_2)
{ after(grammarAccess.getWhileAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getStatementAssignment_4()); }
(rule__While__StatementAssignment_4)
{ after(grammarAccess.getWhileAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__For__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getIteratorAssignment_2()); }
(rule__For__IteratorAssignment_2)
{ after(grammarAccess.getForAccess().getIteratorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getForAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getStatementAssignment_4()); }
(rule__For__StatementAssignment_4)
{ after(grammarAccess.getForAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EachIterator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group__0__Impl
	rule__EachIterator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getGroup_0()); }
(rule__EachIterator__Group_0__0)?
{ after(grammarAccess.getEachIteratorAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EachIterator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group__1__Impl
	rule__EachIterator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getEachIteratorAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EachIterator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group__2__Impl
	rule__EachIterator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getValueAssignment_2()); }
(rule__EachIterator__ValueAssignment_2)
{ after(grammarAccess.getEachIteratorAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EachIterator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group__3__Impl
	rule__EachIterator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getEachIteratorAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EachIterator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getArrayAssignment_4()); }
(rule__EachIterator__ArrayAssignment_4)
{ after(grammarAccess.getEachIteratorAccess().getArrayAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EachIterator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group_0__0__Impl
	rule__EachIterator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getVarKeyword_0_0()); }
(
	'var' 
)
{ after(grammarAccess.getEachIteratorAccess().getVarKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EachIterator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group_0__1__Impl
	rule__EachIterator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getKeyAssignment_0_1()); }
(rule__EachIterator__KeyAssignment_0_1)
{ after(grammarAccess.getEachIteratorAccess().getKeyAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EachIterator__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EachIterator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getEachIteratorAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableIterator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIterator__Group__0__Impl
	rule__VariableIterator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getInitializationAssignment_0()); }
(rule__VariableIterator__InitializationAssignment_0)
{ after(grammarAccess.getVariableIteratorAccess().getInitializationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIterator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIterator__Group__1__Impl
	rule__VariableIterator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getVariableIteratorAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIterator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIterator__Group__2__Impl
	rule__VariableIterator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getConditionAssignment_2()); }
(rule__VariableIterator__ConditionAssignment_2)
{ after(grammarAccess.getVariableIteratorAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIterator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIterator__Group__3__Impl
	rule__VariableIterator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getVariableIteratorAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIterator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIterator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getIncrementAssignment_4()); }
(rule__VariableIterator__IncrementAssignment_4)
{ after(grammarAccess.getVariableIteratorAccess().getIncrementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_1()); }
(rule__FunctionDeclaration__NameAssignment_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_3()); }
(rule__FunctionDeclaration__Group_3__0)?
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_3__0__Impl
	rule__FunctionDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParameterAssignment_3_0()); }
(rule__FunctionDeclaration__ParameterAssignment_3_0)
{ after(grammarAccess.getFunctionDeclarationAccess().getParameterAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_3_1()); }
(rule__FunctionDeclaration__Group_3_1__0)*
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_3_1__0__Impl
	rule__FunctionDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParameterAssignment_3_1_1()); }
(rule__FunctionDeclaration__ParameterAssignment_3_1_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getParameterAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getByAdressAssignment_0()); }
(rule__ParameterDeclaration__ByAdressAssignment_0)
{ after(grammarAccess.getParameterDeclarationAccess().getByAdressAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); }
(rule__ParameterDeclaration__NameAssignment_1)
{ after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclaration__Group__0__Impl
	rule__LocalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getLocalDeclarationAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclaration__Group__1__Impl
	rule__LocalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getVariablesAssignment_1()); }
(rule__LocalDeclaration__VariablesAssignment_1)
{ after(grammarAccess.getLocalDeclarationAccess().getVariablesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclaration__Group__2__Impl
	rule__LocalDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getGroup_2()); }
(rule__LocalDeclaration__Group_2__0)*
{ after(grammarAccess.getLocalDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLocalDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclaration__Group_2__0__Impl
	rule__LocalDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLocalDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getVariablesAssignment_2_1()); }
(rule__LocalDeclaration__VariablesAssignment_2_1)
{ after(grammarAccess.getLocalDeclarationAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GlobalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__0__Impl
	rule__GlobalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getGlobalKeyword_0()); }

	'global' 

{ after(grammarAccess.getGlobalDeclarationAccess().getGlobalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__1__Impl
	rule__GlobalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getVariablesAssignment_1()); }
(rule__GlobalDeclaration__VariablesAssignment_1)
{ after(grammarAccess.getGlobalDeclarationAccess().getVariablesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__2__Impl
	rule__GlobalDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getGroup_2()); }
(rule__GlobalDeclaration__Group_2__0)*
{ after(grammarAccess.getGlobalDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getGlobalDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GlobalDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group_2__0__Impl
	rule__GlobalDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getGlobalDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getVariablesAssignment_2_1()); }
(rule__GlobalDeclaration__VariablesAssignment_2_1)
{ after(grammarAccess.getGlobalDeclarationAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0()); }
(rule__VariableDeclaration__NameAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
(rule__VariableDeclaration__Group_1__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__0__Impl
	rule__VariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getValueAssignment_1_1()); }
(rule__VariableDeclaration__ValueAssignment_1_1)
{ after(grammarAccess.getVariableDeclarationAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOrParserRuleCall_0()); }
	ruleOr
{ after(grammarAccess.getComparisonAccess().getOrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
(rule__Comparison__Group_1__0)*
{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getAlternatives_1_0()); }
(rule__Comparison__Alternatives_1_0)
{ after(grammarAccess.getComparisonAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
(rule__Comparison__RightAssignment_1_1)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_0__0__Impl
	rule__Comparison__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getTypedEqualsLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getTypedEqualsLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getEqualsSignEqualsSignEqualsSignKeyword_1_0_0_1()); }

	'===' 

{ after(grammarAccess.getComparisonAccess().getEqualsSignEqualsSignEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_1__0__Impl
	rule__Comparison__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getEqualsLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getEqualsLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getEqualsSignEqualsSignKeyword_1_0_1_1()); }

	'==' 

{ after(grammarAccess.getComparisonAccess().getEqualsSignEqualsSignKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_2__0__Impl
	rule__Comparison__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getTypedDifferentLeftAction_1_0_2_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getTypedDifferentLeftAction_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getExclamationMarkEqualsSignEqualsSignKeyword_1_0_2_1()); }

	'!==' 

{ after(grammarAccess.getComparisonAccess().getExclamationMarkEqualsSignEqualsSignKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_3__0__Impl
	rule__Comparison__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getDifferentLeftAction_1_0_3_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getDifferentLeftAction_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getExclamationMarkEqualsSignKeyword_1_0_3_1()); }

	'!=' 

{ after(grammarAccess.getComparisonAccess().getExclamationMarkEqualsSignKeyword_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_4__0__Impl
	rule__Comparison__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getLessOrEqualsLeftAction_1_0_4_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getLessOrEqualsLeftAction_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_4_1()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_5__0__Impl
	rule__Comparison__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getLessLeftAction_1_0_5_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getLessLeftAction_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_5_1()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_6__0__Impl
	rule__Comparison__Group_1_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getMoreOrEqualsLeftAction_1_0_6_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getMoreOrEqualsLeftAction_1_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_0_6_1()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_7__0__Impl
	rule__Comparison__Group_1_0_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getMoreLeftAction_1_0_7_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getMoreLeftAction_1_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_7_1()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1_0()); }
(rule__Or__Group_1_0__0)
{ after(grammarAccess.getOrAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_1()); }
(rule__Or__RightAssignment_1_1)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1_0__0__Impl
	rule__Or__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getTypedEqualsLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getOrAccess().getTypedEqualsLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAlternatives_1_0_1()); }
(rule__Or__Alternatives_1_0_1)
{ after(grammarAccess.getOrAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getAndAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1_0()); }
(rule__And__Group_1_0__0)
{ after(grammarAccess.getAndAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_1()); }
(rule__And__RightAssignment_1_1)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1_0__0__Impl
	rule__And__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getTypedEqualsLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getAndAccess().getTypedEqualsLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAlternatives_1_0_1()); }
(rule__And__Alternatives_1_0_1)
{ after(grammarAccess.getAndAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
(rule__Multiplication__Alternatives_1_0)
{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__0__Impl
	rule__Multiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__0__Impl
	rule__Multiplication__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRealLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getRealLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_1()); }
(rule__PrimaryExpression__ValueAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIntLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getIntLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_2_1()); }
(rule__PrimaryExpression__ValueAssignment_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__0__Impl
	rule__PrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_5_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_5_1()); }
(rule__PrimaryExpression__ValueAssignment_5_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__0__Impl
	rule__ArrayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__1__Impl
	rule__ArrayLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getArrayLiteralAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__2__Impl
	rule__ArrayLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getValuesAssignment_2()); }
(rule__ArrayLiteral__ValuesAssignment_2)
{ after(grammarAccess.getArrayLiteralAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__3__Impl
	rule__ArrayLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup_3()); }
(rule__ArrayLiteral__Group_3__0)*
{ after(grammarAccess.getArrayLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_3__0__Impl
	rule__ArrayLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getValuesAssignment_3_1()); }
(rule__ArrayLiteral__ValuesAssignment_3_1)
{ after(grammarAccess.getArrayLiteralAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment_0()); }
(rule__VariableReference__VariableAssignment_0)
{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup_1()); }
(rule__VariableReference__Group_1__0)*
{ after(grammarAccess.getVariableReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1__0__Impl
	rule__VariableReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getVariableReferenceAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1__1__Impl
	rule__VariableReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getDimensionsAssignment_1_1()); }
(rule__VariableReference__DimensionsAssignment_1_1)
{ after(grammarAccess.getVariableReferenceAccess().getDimensionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getVariableReferenceAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
(

)
{ after(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1()); }
(rule__FunctionCall__FunctionAssignment_1)
{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_3()); }
(rule__FunctionCall__ArgsAssignment_3)
{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__4__Impl
	rule__FunctionCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_4()); }
(rule__FunctionCall__Group_4__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunctionCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_4__0__Impl
	rule__FunctionCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_4_1()); }
(rule__FunctionCall__ArgsAssignment_4_1)
{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Include__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__1__Impl
	rule__Include__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIncludeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__2__Impl
	rule__Include__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getQuotationMarkKeyword_2()); }

	'"' 

{ after(grammarAccess.getIncludeAccess().getQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__3__Impl
	rule__Include__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getIncludeAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__4__Impl
	rule__Include__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getQuotationMarkKeyword_4()); }

	'"' 

{ after(grammarAccess.getIncludeAccess().getQuotationMarkKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__5__Impl
	rule__Include__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getIncludeAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getIncludeAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Script__StatementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScriptAccess().getStatementsStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getScriptAccess().getStatementsStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffectationAccess().getVariableVariableReferenceParserRuleCall_0_0()); }
	ruleVariableReference{ after(grammarAccess.getAffectationAccess().getVariableVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffectationAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAffectationAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getConditionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfAccess().getConditionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ThenAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getThenStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIfAccess().getThenStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElseAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getIfAccess().getElseStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getConditionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileAccess().getConditionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhileAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__IteratorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getIteratorForIteratorParserRuleCall_2_0()); }
	ruleForIterator{ after(grammarAccess.getForAccess().getIteratorForIteratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getForAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__KeyAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getKeyVariableDeclarationParserRuleCall_0_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getEachIteratorAccess().getKeyVariableDeclarationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getValueVariableDeclarationParserRuleCall_2_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getEachIteratorAccess().getValueVariableDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EachIterator__ArrayAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEachIteratorAccess().getArrayExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getEachIteratorAccess().getArrayExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__InitializationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getInitializationAffectationParserRuleCall_0_0()); }
	ruleAffectation{ after(grammarAccess.getVariableIteratorAccess().getInitializationAffectationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getConditionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getVariableIteratorAccess().getConditionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIterator__IncrementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIteratorAccess().getIncrementExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getVariableIteratorAccess().getIncrementExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParameterAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParameterParameterDeclarationParserRuleCall_3_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDeclarationAccess().getParameterParameterDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParameterAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParameterParameterDeclarationParserRuleCall_3_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDeclarationAccess().getParameterParameterDeclarationParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__ByAdressAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getByAdressCommercialAtKeyword_0_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getByAdressCommercialAtKeyword_0_0()); }

	'@' 

{ after(grammarAccess.getParameterDeclarationAccess().getByAdressCommercialAtKeyword_0_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getByAdressCommercialAtKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__VariablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getLocalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclaration__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_2_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getLocalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__VariablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getGlobalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_2_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getGlobalDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getValueExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getValueExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightOrParserRuleCall_1_1_0()); }
	ruleOr{ after(grammarAccess.getComparisonAccess().getRightOrParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_1_0()); }
	ruleAnd{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAdditionParserRuleCall_1_1_0()); }
	ruleAddition{ after(grammarAccess.getAndAccess().getRightAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueREALTerminalRuleCall_1_1_0()); }
	RULE_REAL{ after(grammarAccess.getPrimaryExpressionAccess().getValueREALTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getPrimaryExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getValuesExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getArrayLiteralAccess().getValuesExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getValuesExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayLiteralAccess().getValuesExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__DimensionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getDimensionsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableReferenceAccess().getDimensionsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_REAL : ('0'..'9')* '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


